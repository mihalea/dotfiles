#!/usr/bin/python3

# Read .Xresources color definitions and copy them into my files:
		# 1. i3 configuration
		# 2. Xfce4 Terminal
		# 3. i3 Lemonbar configuration
		# 4. Powerline
		# 5. My custom rofi script

import re
import json
import os
from hex2x11 import BestMatch

find_pat = re.compile("(?:([a-zA-Z0-9]+):\s*(?:\[\d+\])?#(.{6}))")
home = os.environ['HOME']

# Open user's .Xresources
# TODO -- If file doesn't exist, try .Xdefaults, and then finally error
f = open(home+"/.Xresources", "r")

# Read the colors from the file! Here's a sample:
		#
		# !URxvt*background: #3f3f3f
		# !URxvt*foreground: #dcdccc
		# !URxvt*color0: #3f3f3f
		# ...
		# !URxvt*color15: #ffffff
		#
		# The "!URxvt*" prefix may not be there, don't rely on it

definitions = {}
lookup = {
		"foreground": "c_foreground",
		"background": "c_background",
		"cursorColor": "c_cursor",
		"color0": "c_black_d",
		"color8": "c_black_l",
		"color1": "c_red_d",
		"color9": "c_red_l",
		"color2": "c_green_d",
		"color10": "c_green_l",
		"color3": "c_yellow_d",
		"color11": "c_yellow_l",
		"color4": "c_blue_d",
		"color12": "c_blue_l",
		"color5": "c_magenta_d",
		"color13": "c_magenta_l",
		"color6": "c_cyan_d",
		"color14": "c_cyan_l",
		"color7": "c_white_d",
		"color15": "c_white_l"
}
colors = {}
for line in f:
		tkn = find_pat.findall(line)
		if len(tkn) and tkn[0][0] in lookup:
				colors[lookup[tkn[0][0]]] = tkn[0][1]

# Close the file cause we're done with it
f.close()

# If there are any missing colors, we need to put them in (use FFF000)
for k in lookup:
		if lookup[k] not in colors:
				colors[lookup[k]] = "fff000"

def replace_in_file(fname, replacement, begin="# --- APPLY XRES BEGIN", end="# --- APPLY XRES END"):
		f = open(fname, "r")
		lines = f.readlines()
		idx = sidx = eidx = 0

		for l in lines:
				if l == begin+"\n":
						sidx = idx + 1
				elif l == end+"\n":
						eidx = idx - 1
						idx += 1

		f.close()

		if not begin:
				print("Error: "+fname+": could not find beginning line");
		elif not end:
				print("Error: "+fname+": could not find end line");
		else:
				while eidx >= sidx:
						lines.pop(eidx)
						eidx -= 1

		lines.insert(sidx, replacement+"\n")


		f = open(fname, "w")
		f.write("".join(lines))
		f.close()

def hex_lighten(hexvalue, n):
		hexvalue = hexvalue.lower()
		out = ""
		for i in range(0,3):
				out += hex(max(min(int(hexvalue[i*2:(i*2)+2], base=16)+n,255),0))[2:]
				if len(out) % 2:
						out += "0"
						return out

def replace_rofi(fname=home+"/.Xresources", begin="! --- APPLY XRES BEGIN", end="! --- APPLY XRES END"):
		config = " #" + colors['c_background'] +	\
						", #" + colors["c_foreground"] + \
						", #" + colors['c_background'] + \
						", #" + colors["c_foreground"] + \
						", #" + colors['c_background']

		f = open(fname, "r")
		lines = f.readlines()
		f.close()

		idx = sidx = eidx = 0

		for l in lines:
				if l == begin+"\n":
						sidx = idx + 1
				elif l == end+"\n":
						eidx = idx - 1
				idx += 1

		if not sidx:
				print("Error:" + fname + " could not find beginning line");
		elif not eidx:
				print("Error:" + fname + " could not find end line");
		else:
				for i in range(sidx, eidx+1):
						pos = lines[i].index(':')
						lines[i]  = lines[i][:pos+1] + config + "\n"

		f = open(fname, "w")
		f.write("".join(lines))
		f.close()



### ------------------------------------------------------------------------- 
### ------------------------- Apply colors to files -------------------------
### ------------------------------------------------------------------------- 

# i3 configuration file
repl = []

for k in colors:
		repl.append("set $"+k+" #"+colors[k])

repl = "\n".join(repl)
replace_in_file(home+"/.i3/config", repl)

# rofi configuration
replace_rofi()

print("Done")
